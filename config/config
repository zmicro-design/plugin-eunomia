export PLUGIN_EUNOMIA_NAME=gvm

####### BASE #######
export PLUGIN_EUNOMIA_EXPORT_DIR=${PLUGIN_DATA}/export
#######
# Dockerfiles
export PLUGIN_EUNOMIA_DOCKERFILES_DIR=${PLUGIN_DIR}/config/dockerfiles
export PLUGIN_EUNOMIA_DOCKER_CONTAINER_PREFIX=zmicro_plugin_eunomia_
# Service
export PLUGIN_EUNOMIA_SERVICE_NAME=zmicro_plugin_eunomia
export PLUGIN_EUNOMIA_SERVICE_PORT=${PLUGIN_EUNOMIA_SERVICE_PORT:-9000}
# Docker
export PLUGIN_EUNOMIA_DOCKER_REGISTRY=${PLUGIN_EUNOMIA_DOCKER_REGISTRY}
# Config Center
export PLUGIN_EUNOMIA_CONFIG_CENTER=${PLUGIN_EUNOMIA_CONFIG_CENTER}
export PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID=${PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID}
export PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET=${PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET}

# Queue
export PLUGIN_EUNOMIA_TASK_QUEUE_IS_ENABLED=${PLUGIN_EUNOMIA_TASK_QUEUE_IS_ENABLED:-"true"}
export PLUGIN_EUNOMIA_TASK_QUEUE_COCURRENCY=${PLUGIN_EUNOMIA_TASK_QUEUE_COCURRENCY:-"6"}
export PLUGIN_EUNOMIA_TASK_QUEUE_LOCK=${PLUGIN_EUNOMIA_TASK_QUEUE_LOCK:-"/tmp/zmicro_plugin_eunomia_task_queue.lock"}

# FLOW_CI
# @TODO
if [ "$FLOW_CI" = "true" ]; then
  log::info "[$(timestamp)] Current CI: FLOW_CI"

  export PIPELINE_ID=$(echo $PIPELINE_ID | base64 -d)
  export BUILD_NUMBER=$(echo $BUILD_NUMBER | base64 -d)

  export EUNOMIA_TASK_ID=$(echo $EUNOMIA_TASK_ID | base64 -d)

  export EUNOMIA_GIT_BRANCH=$(echo $EUNOMIA_GIT_BRANCH | base64 -d)
  export EUNOMIA_GIT_REPOSITORY=$(echo $EUNOMIA_GIT_REPOSITORY | base64 -d)
  export EUNOMIA_GIT_COMMIT=$(echo $EUNOMIA_GIT_COMMIT | base64 -d)

  if [ -n "$EUNOMIA_GIT_COMMIT_MESSAGE" ]; then
    export EUNOMIA_GIT_COMMIT_MESSAGE=$(echo $EUNOMIA_GIT_COMMIT_MESSAGE | base64 -d)
  fi

  if [ -n "$EUNOMIA_GIT_COMMIT_AUTHOR" ]; then
    export EUNOMIA_GIT_COMMIT_AUTHOR=$(echo $EUNOMIA_GIT_COMMIT_AUTHOR | base64 -d)
  fi

  if [ -n "$EUNOMIA_GIT_COMMIT_TIMESTAMP" ]; then
    export EUNOMIA_GIT_COMMIT_TIMESTAMP=$(echo $EUNOMIA_GIT_COMMIT_TIMESTAMP | base64 -d)
  fi

  if [ -n "$EUNOMIA_BUILD_TIMESTAMP" ]; then
    export EUNOMIA_BUILD_TIMESTAMP=$(echo $EUNOMIA_BUILD_TIMESTAMP | base64 -d)
  fi

  if [ -n "$EUNOMIA_BUILD_DOCKER_BUILD_CONTEXT" ]; then
    export EUNOMIA_BUILD_DOCKER_BUILD_CONTEXT=$(echo $EUNOMIA_BUILD_DOCKER_BUILD_CONTEXT | base64 -d)
  fi

  if [ -n "$EUNOMIA_BUILD_DOCKERFILE_PATH" ]; then
    export EUNOMIA_BUILD_DOCKERFILE_PATH=$(echo $EUNOMIA_BUILD_DOCKERFILE_PATH | base64 -d)
  fi

  if [ -n "$EUNOMIA_BUILD_DOCKER_IMAGE_NAME" ]; then
    export EUNOMIA_BUILD_DOCKER_IMAGE_NAME=$(echo $EUNOMIA_BUILD_DOCKER_IMAGE_NAME | base64 -d)
  fi

  if [ -n "$EUNOMIA_BUILD_DOCKER_IMAGE_VERSION" ]; then
    export EUNOMIA_BUILD_DOCKER_IMAGE_VERSION=$(echo $EUNOMIA_BUILD_DOCKER_IMAGE_VERSION | base64 -d)
  fi

  if [ -n "$EUNOMIA_DEPLOY_MODE" ]; then
    export EUNOMIA_DEPLOY_MODE=$(echo $EUNOMIA_DEPLOY_MODE | base64 -d)
  fi

  if [ -n "$EUNOMIA_DEPLOY_HOST" ]; then
    export EUNOMIA_DEPLOY_HOST=$(echo $EUNOMIA_DEPLOY_HOST | base64 -d)
  fi

  if [ -n "$EUNOMIA_DEPLOY_SKIP_DEPLOY_SCRIPT" ]; then
    export EUNOMIA_DEPLOY_SKIP_DEPLOY_SCRIPT=$(echo $EUNOMIA_DEPLOY_SKIP_DEPLOY_SCRIPT | base64 -d)
  fi

  if [ -n "$EUNOMIA_DEPLOY_COMPONENT_MODULE_NAME" ]; then
    export EUNOMIA_DEPLOY_COMPONENT_MODULE_NAME=$(echo $EUNOMIA_DEPLOY_COMPONENT_MODULE_NAME | base64 -d)
  fi

  if [ -n "$EUNOMIA_DEPLOY_COMPONENT_CLUSTER_VERSION" ]; then
    export EUNOMIA_DEPLOY_COMPONENT_CLUSTER_VERSION=$(echo $EUNOMIA_DEPLOY_COMPONENT_CLUSTER_VERSION | base64 -d)
  fi

  if [ -n "$EUNOMIA_DEPLOY_COMPONENT_VERSION" ]; then
    export EUNOMIA_DEPLOY_COMPONENT_VERSION=$(echo $EUNOMIA_DEPLOY_COMPONENT_VERSION | base64 -d)
  fi

  if [ -n "$EUNOMIA_DEPLOY_COMPONENT_VERSION_TYPE" ]; then
    export EUNOMIA_DEPLOY_COMPONENT_VERSION_TYPE=$(echo $EUNOMIA_DEPLOY_COMPONENT_VERSION_TYPE | base64 -d)
  fi

  if [ -n "$EUNOMIA_DEPLOY_COMPONENT_CPU_ARCH" ]; then
    export EUNOMIA_DEPLOY_COMPONENT_CPU_ARCH=$(echo $EUNOMIA_DEPLOY_COMPONENT_CPU_ARCH | base64 -d)
  fi

  if [ -n "$EUNOMIA_DEPLOY_COMPONENT_OS" ]; then
    export EUNOMIA_DEPLOY_COMPONENT_OS=$(echo $EUNOMIA_DEPLOY_COMPONENT_OS | base64 -d)
  fi

  if [ -n "$EUNOMIA_DEPLOYMENT_MODE" ] && [ "$EUNOMIA_DEPLOYMENT_MODE" != "service" ]; then
    export EUNOMIA_DEPLOYMENT_MODE=$(echo $EUNOMIA_DEPLOYMENT_MODE | base64 -d)
  fi
  if [ -n "$EUNOMIA_DEPLOYMENT_CONFIG_ID" ]; then
    export EUNOMIA_DEPLOYMENT_CONFIG_ID=$(echo $EUNOMIA_DEPLOYMENT_CONFIG_ID | base64 -d)
  fi
  if [ -n "$EUNOMIA_DEPLOYMENT_IGNORE" ]; then
    export EUNOMIA_DEPLOYMENT_IGNORE=$(echo $EUNOMIA_DEPLOYMENT_IGNORE | base64 -d)
  fi
  if [ -n "$EUNOMIA_DEPLOYMENT_ENV" ]; then
    export EUNOMIA_DEPLOYMENT_ENV=$(echo $EUNOMIA_DEPLOYMENT_ENV | base64 -d)
  fi
  if [ -n "$EUNOMIA_DEPLOYMENT_DEV_DOCKER_HOST" ]; then
    export EUNOMIA_DEPLOYMENT_DEV_DOCKER_HOST=$(echo $EUNOMIA_DEPLOYMENT_DEV_DOCKER_HOST | base64 -d)
  fi
  if [ -n "$EUNOMIA_DEPLOYMENT_PROD_DOCKER_HOST" ]; then
    export EUNOMIA_DEPLOYMENT_PROD_DOCKER_HOST=$(echo $EUNOMIA_DEPLOYMENT_PROD_DOCKER_HOST | base64 -d)
  fi
  if [ -n "$EUNOMIA_DEPLOYMENT_CUSTOM_DOMAIN_NAME" ]; then
    export EUNOMIA_DEPLOYMENT_CUSTOM_DOMAIN_NAME=$(echo $EUNOMIA_DEPLOYMENT_CUSTOM_DOMAIN_NAME | base64 -d)
  fi
  if [ -n "$EUNOMIA_DEPLOYMENT_APPLICATION_NAME" ]; then
    export EUNOMIA_DEPLOYMENT_APPLICATION_NAME=$(echo $EUNOMIA_DEPLOYMENT_APPLICATION_NAME | base64 -d)
  fi
  if [ -n "$EUNOMIA_DEPLOYMENT_MEM_LIMIT" ]; then
    export EUNOMIA_DEPLOYMENT_MEM_LIMIT=$(echo $EUNOMIA_DEPLOYMENT_MEM_LIMIT | base64 -d)
  fi
  if [ -n "$EUNOMIA_DEPLOYMENT_CPU_LIMIT" ]; then
    export EUNOMIA_DEPLOYMENT_CPU_LIMIT=$(echo $EUNOMIA_DEPLOYMENT_CPU_LIMIT | base64 -d)
  fi

  # CUSTOM VAR
  if [ -n "$EUNOMIA_APPLICATION_NAME" ]; then
    export EUNOMIA_APPLICATION_NAME=$(echo $EUNOMIA_APPLICATION_NAME | base64 -d)
  fi

  # FLOW STAGE
  if [ -n "$EUNOMIA_FLOW_STAGE_DEPLOY" ]; then
    export EUNOMIA_FLOW_STAGE_DEPLOY=$(echo $EUNOMIA_FLOW_STAGE_DEPLOY | base64 -d)
  fi

  # PIPELINE
  export EUNOMIA_BUILD_AUTHOR=$(echo $EUNOMIA_BUILD_AUTHOR | base64 -d)
  export EUNOMIA_BUILD_AUTHOR_EMAIL=$(echo $EUNOMIA_BUILD_AUTHOR_EMAIL | base64 -d)
  export EUNOMIA_BUILD_AUTHOR_ID=$(echo $EUNOMIA_BUILD_AUTHOR_ID | base64 -d)
  export EUNOMIA_BUILD_FROM=$(echo $EUNOMIA_BUILD_FROM | base64 -d)
  # Project
  export EUNOMIA_PROJECT_ID=$(echo $EUNOMIA_PROJECT_ID | base64 -d)
  export EUNOMIA_DEPLOYMENT_ID=$(echo $EUNOMIA_DEPLOYMENT_ID | base64 -d)
  export EUNOMIA_JOB_ID=$(echo $EUNOMIA_JOB_ID | base64 -d)
  # Hook
  export EUNOMIA_START_HOOK=$(echo $EUNOMIA_START_HOOK | base64 -d)
  export EUNOMIA_SUCCEED_HOOK=$(echo $EUNOMIA_SUCCEED_HOOK | base64 -d)
  export EUNOMIA_FAILED_HOOK=$(echo $EUNOMIA_FAILED_HOOK | base64 -d)
  export EUNOMIA_LOG_HOOK=$(echo $EUNOMIA_LOG_HOOK | base64 -d)

  ################################################################
  # Eunomia
  export EUNOMIA_GIT_TAG=$(echo $EUNOMIA_GIT_TAG | base64 -d)
  export CI=$(echo $CI | base64 -d)
  export EUNOMIA_CI=$(echo $EUNOMIA_CI | base64 -d)
  export EUNOMIA_RUNNER_NAME=$(echo $EUNOMIA_RUNNER_NAME | base64 -d)
  export EUNOMIA_RUNNER_OS=$(echo $EUNOMIA_RUNNER_OS | base64 -d)
  export EUNOMIA_RUNNER_PLATFORM=$(echo $EUNOMIA_RUNNER_PLATFORM | base64 -d)
  export EUNOMIA_RUNNER_ARCH=$(echo $EUNOMIA_RUNNER_ARCH | base64 -d)
  export EUNOMIA_RUNNER_USER=$(echo $EUNOMIA_RUNNER_USER | base64 -d)
  # END
  if [ -n "$EUNOMIA_DOCKER_BUILDX_OPTIONS" ]; then
    export EUNOMIA_DOCKER_BUILDX_OPTIONS=$(echo $EUNOMIA_DOCKER_BUILDX_OPTIONS | base64 -d)
  fi
  if [ -n "$EUNOMIA_DOCKER_BUILDX_PLATFORMS" ]; then
    export EUNOMIA_DOCKER_BUILDX_PLATFORMS=$(echo $EUNOMIA_DOCKER_BUILDX_PLATFORMS | base64 -d)
  fi

  # @TODO new env
  export EUNOMIA_BUILD_ID=${PIPELINE_ID}_${BUILD_NUMBER}
  # export EUNOMIA_BUILD_ID=${EUNOMIA_BUILD_ID:-$PLUGIN_EUNOMIA_BUILD_ID}
  # if [ -z "$EUNOMIA_BUILD_ID" ]; then
  #   export EUNOMIA_BUILD_ID=${PIPELINE_ID}_${BUILD_NUMBER}
  # fi
fi

####### Build #######
# BUILD
export EUNOMIA_BUILD_TRIGGER=${EUNOMIA_BUILD_TRIGGER}
export EUNOMIA_BUILD_ID=${EUNOMIA_BUILD_ID}
export EUNOMIA_BUILD_DIR=${PLUGIN_DATA}/builds/$EUNOMIA_BUILD_ID
export EUNOMIA_BUILD_ENV=$EUNOMIA_BUILD_DIR/.eunomia
export EUNOMIA_BUILD_LOG=$EUNOMIA_BUILD_DIR/eunomia.build.log
export EUNOMIA_BUILD_GIT_DIR=$EUNOMIA_BUILD_DIR/repository
export EUNOMIA_BUILD_ENV_SHELL=${EUNOMIA_BUILD_DIR}/.env.shell
#
export EUNOMIA_BUILD_TIMESTAMP=${EUNOMIA_BUILD_TIMESTAMP:-$(date)}
# Build Docker Image
export EUNOMIA_BUILD_DOCKER_BUILD_CONTEXT=${EUNOMIA_BUILD_DOCKER_BUILD_CONTEXT}
export EUNOMIA_BUILD_DOCKERFILE_PATH=${EUNOMIA_BUILD_DOCKERFILE_PATH}
export EUNOMIA_BUILD_DOCKER_IMAGE_VERSION=${EUNOMIA_BUILD_DOCKER_IMAGE_VERSION}

# EXPORT
export PLUGIN_EUNOMIA_EXPORT_RUNNER_NAME=${PLUGIN_EUNOMIA_DOCKER_CONTAINER_PREFIX}${EUNOMIA_BUILD_ID}
export PLUGIN_EUNOMIA_EXPORT_DISABLE=${PLUGIN_EUNOMIA_EXPORT_DISABLE:-"false"}
# 指定容器构建产物目录，默认是 /var/www/html
export PLUGIN_EUNOMIA_EXPORT_RUNNER_DIST_DIR=${PLUGIN_EUNOMIA_EXPORT_RUNNER_DIST_DIR:-$EUNOMIA_EXPORT_RUNNER_DIST_DIR}
if [ -z "$PLUGIN_EUNOMIA_EXPORT_RUNNER_DIST_DIR" ]; then
  export PLUGIN_EUNOMIA_EXPORT_RUNNER_DIST_DIR="/var/www/html"
fi
#
export PLUGIN_EUNOMIA_EXPORT_ID_DIR=${PLUGIN_EUNOMIA_EXPORT_DIR}/$EUNOMIA_BUILD_ID
export PLUGIN_EUNOMIA_EXPORT_ID_PKG=${PLUGIN_EUNOMIA_EXPORT_ID_DIR}.tar.gz
#
export EUNOMIA_EXPORT_DIST_SERVER=${EUNOMIA_EXPORT_DIST_SERVER:-"http://10.1.0.169:9000"}
export EUNOMIA_EXPORT_DIST_URL=$EUNOMIA_EXPORT_DIST_SERVER/${EUNOMIA_BUILD_ID}.tar.gz
#
export PLUGIN_EUNOMIA_NOTIFICATION_FEISHU_URL=https://open.feishu.cn/open-apis/bot/v2/hook/aecda9eb-84ca-4231-aaf6-bee02cc144b8

# DEPLOY
# EUNOMIA_DEPLOY_MODE is deploy mode, available values: service | script | component, default: service
export EUNOMIA_DEPLOY_DIR=${EUNOMIA_BUILD_DIR}/deploy
export EUNOMIA_DEPLOY_SCRIPTS_DIR=${EUNOMIA_DEPLOY_DIR}/scripts
export EUNOMIA_DEPLOY_MODE=${EUNOMIA_DEPLOY_MODE:-"service"}
# deploy_mode: script
export EUNOMIA_DEPLOY_HOST=$EUNOMIA_DEPLOY_HOST
export EUNOMIA_DEPLOY_SCRIPT=${EUNOMIA_BUILD_GIT_DIR}/.idp/deploy/deploy.sh
export EUNOMIA_DEPLOY_LOG=$EUNOMIA_BUILD_DIR/eunomia.deploy.log
# deploy_mode: component
export EUNOMIA_DEPLOY_COMPONENT_MODULE_NAME=${EUNOMIA_DEPLOY_COMPONENT_MODULE_NAME}
export EUNOMIA_DEPLOY_COMPONENT_CLUSTER_VERSION=${EUNOMIA_DEPLOY_COMPONENT_CLUSTER_VERSION}
export EUNOMIA_DEPLOY_COMPONENT_VERSION=${EUNOMIA_DEPLOY_COMPONENT_VERSION}
export EUNOMIA_DEPLOY_COMPONENT_VERSION_TYPE=${EUNOMIA_DEPLOY_COMPONENT_VERSION_TYPE:-"SNAPSHOT"}
export EUNOMIA_DEPLOY_COMPONENT_CPU_ARCH=${EUNOMIA_DEPLOY_COMPONENT_CPU_ARCH}
export EUNOMIA_DEPLOY_COMPONENT_OS=${EUNOMIA_DEPLOY_COMPONENT_OS}
export EUNOMIA_DEPLOY_COMPONENT_VERSION_NUM=$(date +"%Y%m%d%H%M%S%N" | cut -b1-16)
#
export EUNOMIA_DEPLOY_COMPONENT_OSS_BUCKET=${EUNOMIA_DEPLOY_COMPONENT_OSS_BUCKET}
export EUNOMIA_DEPLOY_COMPONENT_OSS_ROOT=${EUNOMIA_DEPLOY_COMPONENT_OSS_ROOT}
export EUNOMIA_DEPLOY_COMPONENT_FILE_NAME=${EUNOMIA_DEPLOY_COMPONENT_FILE_NAME}
export EUNOMIA_DEPLOY_COMPONENT_OSS_PATH=${EUNOMIA_DEPLOY_COMPONENT_OSS_PATH}
export EUNOMIA_DEPLOY_COMPONENT_SERVER=${EUNOMIA_DEPLOY_COMPONENT_SERVER}

# AUTO TEST
export EUNOMIA_AUTO_TEST_TRIGGER_SERVER=${EUNOMIA_AUTO_TEST_TRIGGER_SERVER}
export EUNOMIA_AUTO_TEST_SERVER=${EUNOMIA_AUTO_TEST_SERVER}

# CUSTOM SCRIPT
# EUNOMIA_BUILD_GIT_DIR/.eunomia/deploy/deploy.sh

# ============= SERVICE ==============
# DEPLOYMENT
# env
export EUNOMIA_DEPLOYMENT_DIR=${PLUGIN_DATA}/deployments/${EUNOMIA_TASK_ID}
export EUNOMIA_DEPLOYMENT_ENV_SHELL=${EUNOMIA_DEPLOYMENT_DIR}/.env.shell
export EUNOMIA_DEPLOYMENT_ENV_CONFIG=${EUNOMIA_DEPLOYMENT_DIR}/.env.config
export EUNOMIA_DEPLOYMENT_MANIFEST_FILE=${EUNOMIA_DEPLOYMENT_DIR}/docker-compose.yml
#
export EUNOMIA_DEPLOYMENT_MODE=${EUNOMIA_DEPLOYMENT_MODE:-"service"}
export EUNOMIA_DEPLOYMENT_IGNORE=${EUNOMIA_DEPLOYMENT_IGNORE:-"false"}
# Resource Limit
export EUNOMIA_DEPLOYMENT_MEM_LIMIT=${EUNOMIA_DEPLOYMENT_MEM_LIMIT:-"4096"}
export EUNOMIA_DEPLOYMENT_CPU_LIMIT=${EUNOMIA_DEPLOYMENT_CPU_LIMIT:-"2"}
# ENV: dev, prd
export EUNOMIA_DEPLOYMENT_ENV=${EUNOMIA_DEPLOYMENT_ENV:-"dev"}
export EUNOMIA_DEPLOYMENT_DEV_DOCKER_HOST=${EUNOMIA_DEPLOYMENT_DEV_DOCKER_HOST:-$PLUGIN_EUNOMIA_DEPLOYMENT_DEV_DOCKER_HOST}
export EUNOMIA_DEPLOYMENT_PROD_DOCKER_HOST=${EUNOMIA_DEPLOYMENT_PROD_DOCKER_HOST:-$PLUGIN_EUNOMIA_DEPLOYMENT_PROD_DOCKER_HOST}
if [ -z "$EUNOMIA_DEPLOYMENT_PROD_DOCKER_HOST" ]; then
  export EUNOMIA_DEPLOYMENT_PROD_DOCKER_HOST=$EUNOMIA_DEPLOYMENT_DEV_DOCKER_HOST
fi
# DOMAIN
export EUNOMIA_DEPLOYMENT_CUSTOM_DOMAIN_NAME=${EUNOMIA_DEPLOYMENT_CUSTOM_DOMAIN_NAME:-$PLUGIN_EUNOMIA_DEPLOYMENT_CUSTOM_DOMAIN_NAME}
export EUNOMIA_DEPLOYMENT_APPLICATION_NAME=${EUNOMIA_DEPLOYMENT_APPLICATION_NAME}

if [ -n "$EUNOMIA_DEPLOYMENT_APPLICATION_NAME" ]; then
  export EUNOMIA_DEPLOYMENT_CUSTOM_DOMAIN_NAME=$EUNOMIA_DEPLOYMENT_APPLICATION_NAME
fi

if [ ! -d "$EUNOMIA_BUILD_DIR" ]; then
  mkdir -p $EUNOMIA_BUILD_DIR
fi

if [ ! -d "$PLUGIN_EUNOMIA_EXPORT_DIR" ]; then
  mkdir -p $PLUGIN_EUNOMIA_EXPORT_DIR
fi

if [ ! -d "$EUNOMIA_DEPLOYMENT_DIR" ]; then
  mkdir -p $EUNOMIA_DEPLOYMENT_DIR
fi

# # GIT
# export GIT_SERVER=${GIT_SERVER}
# export GIT_USERNAME=${GIT_USERNAME}
# export GIT_PASSWORD=${GIT_PASSWORD}
