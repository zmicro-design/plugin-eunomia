#!/bin/bash

# set -e

help() {
  echo "Usage:"
  echo "  zmicro eunomia flow"
}

core() {
  if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
    exit 0
  fi

  if [ "$(zmicro fn os::is_docker)" != "true" ]; then
    log::error "[$(timestamp)][flow] the command(flow) can only be run in docker"
    exit 1
  fi

  if [ -z "$PLUGIN_EUNOMIA_BUILD_ID" ]; then
    log::error "[$(timestamp)][flow] PLUGIN_EUNOMIA_BUILD_ID is required"
    exit 1
  fi
  
  if [ -z "$PLUGIN_EUNOMIA_GIT_REPO_NAME" ]; then
    log::error "[$(timestamp)][flow] PLUGIN_EUNOMIA_GIT_REPO_NAME is required"
    exit 1
  fi

  if [ -z "$PLUGIN_EUNOMIA_GIT_REPO_PKG" ]; then
    log::error "[$(timestamp)][flow] PLUGIN_EUNOMIA_GIT_REPO_PKG is required"
    exit 1
  fi

  echo $PLUGIN_EUNOMIA_GIT_REPO_PKG | grep $PLUGIN_EUNOMIA_GIT_REPO_PKG_TMP_DIR >> /dev/null 2>&1
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)][flow] PLUGIN_EUNOMIA_GIT_REPO_PKG(${PLUGIN_EUNOMIA_GIT_REPO_PKG}) must be starts with ${PLUGIN_EUNOMIA_GIT_REPO_PKG_TMP_DIR}"
    exit 1
  fi

  log::info "[$(timestamp)][flow] preparing ..."
  eunomia::prepare

  if [ -n "$FORCE_BUILD" ]; then
    # build
    log::info "[$(timestamp)][flow] force building ..."
    eunomia::build
  else
    log::info "[$(timestamp)][flow] checking ..."
    if [ "$(eunomia::is_built)" != "true" ]; then
      # build
      log::info "[$(timestamp)][flow] no cache, building ..."
      eunomia::build
    else
      log::info "[$(timestamp)][flow] loading cache ..."
    fi
  fi

  # export
  log::info "[flow] exporting ..."
  eunomia::export

  # done
  log::info "[flow] done"
}

run() {
  core $@
}

run $@
