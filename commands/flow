#!/bin/bash

# set -e

help() {
  echo "Usage:"
  echo "  zmicro eunomia flow"
}

core() {
  if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
    exit 0
  fi

  if [ "$(zmicro fn os::is_docker)" != "true" ]; then
    log::error "[$(timestamp)][flow] the command(flow) can only be run in docker"
    exit 1
  fi

  if [ -z "$PLUGIN_EUNOMIA_BUILD_ID" ]; then
    log::error "[$(timestamp)][flow] PLUGIN_EUNOMIA_BUILD_ID is required"
    exit 1
  fi

  if [ -z "$PLUGIN_EUNOMIA_GIT_REPO_NAME" ]; then
    log::error "[$(timestamp)][flow] PLUGIN_EUNOMIA_GIT_REPO_NAME is required"
    exit 1
  fi

  if [ -z "$PLUGIN_EUNOMIA_GIT_REPO_PKG" ]; then
    log::error "[$(timestamp)][flow] PLUGIN_EUNOMIA_GIT_REPO_PKG is required"
    exit 1
  fi

  echo $PLUGIN_EUNOMIA_GIT_REPO_PKG | grep $PLUGIN_EUNOMIA_GIT_REPO_PKG_TMP_DIR >>/dev/null 2>&1
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)][flow] PLUGIN_EUNOMIA_GIT_REPO_PKG(${PLUGIN_EUNOMIA_GIT_REPO_PKG}) must be starts with ${PLUGIN_EUNOMIA_GIT_REPO_PKG_TMP_DIR}"
    exit 1
  fi

  log::info "[$(timestamp)][flow] preparing ..."
  eunomia::prepare
  if [ "$?" != "0" ]; then
    log::error "[build] failed to prepare"
    exit 1
  fi

  if [ "$PLUGIN_EUNOMIA_TASK_QUEUE_IS_ENABLED" = "true" ]; then
    log::info "[$(timestamp)][flow] task queue is enabled"

    while true; do
      # random sleep
      local wait_time=$(os::random_int 30 10)
      # log::info "[$(timestamp)][flow] wait $wait_time seconds before checking task queue ..."
      os::wait $wait_time

      local total=$(eunomia::task_queue_count_total)
      local running=$(eunomia::task_queue_count_running)

      if [ "$(eunomia::task_queue_is_available)" = "true" ]; then
        log::info "[$(timestamp)][flow] task queue is available(running: ${running}, total: ${total}), go ..."
        local start_result=$(eunomia::task_queue_start)
        if [ "$start_result" = "true" ]; then
          log::info "[$(timestamp)][flow] task queue is started"
          break
        else
          log::info "[$(timestamp)][flow] task queue start error($start_result), waiting ..."
        fi
      else
        log::info "[$(timestamp)][flow] task queue is full(running: ${running}, total: ${total}), waiting ..."
      fi
    done
  fi

  # # @TODO if no user found, do something
  # if [ -z "$PLUGIN_EUNOMIA_EXECUTOR_EMAIL" ]; then
  #   export FORCE_BUILD="true"
  # fi

  if [ -n "$FORCE_BUILD" ]; then
    # build
    log::info "[$(timestamp)][flow] force building ..."
    eunomia::build
    if [ "$?" != "0" ]; then
      log::error "[$(timestamp)][flow] failed to build"
      eunomia::task_queue_done
      exit 1
    fi
  else
    log::info "[$(timestamp)][flow] checking ..."
    if [ "$(eunomia::is_built)" != "true" ]; then
      # build
      log::info "[$(timestamp)][flow] no cache, building ..."
      eunomia::build
      if [ "$?" != "0" ]; then
        log::error "[$(timestamp)][flow] failed to build (2)"
        eunomia::task_queue_done
        exit 1
      fi
    else
      log::info "[$(timestamp)][flow] loading cache ..."
    fi
  fi

  # export
  log::info "[flow] exporting ..."
  eunomia::export
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)][flow] failed to export"
    eunomia::task_queue_done
    exit 1
  fi

  # done
  log::info "[flow] done"
  eunomia::task_queue_done
}

run() {
  core $@
}

run $@
