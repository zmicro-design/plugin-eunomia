#!/bin/bash

# set -e

help() {
  echo "Usage:"
  echo "  zmicro eunomia flow"
}

core() {
  if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
    exit 0
  fi

  log::info "[$(timestamp)][flow] preparing ..."
  eunomia::prepare

  if [ "$PLUGIN_EUNOMIA_TASK_QUEUE_IS_ENABLED" = "true" ]; then
    log::info "[$(timestamp)][flow] task queue is enabled"

    while true; do
      # random sleep
      local wait_time=$(os::random_int 10)
      log::info "[$(timestamp)][flow] wait $wait_time seconds before checking task queue ..."
      os::wait $wait_time

      local total=$(eunomia::task_queue_count_total)
      local running=$(eunomia::task_queue_count_running)

      if [ "$(eunomia::task_queue_is_available)" = "true" ]; then
        log::info "[$(timestamp)][flow] task queue is available(running: ${running}, total: ${total}), go ..."
        local start_result=$(eunomia::task_queue_start)
        if [ "$start_result" = "true" ]; then
          log::info "[$(timestamp)][flow] task queue is started"
          break
        else
          log::info "[$(timestamp)][flow] task queue start error($start_result), waiting ..."
        fi
      else
        log::info "[$(timestamp)][flow] task queue is full(running: ${running}, total: ${total}), waiting ..."
      fi
    done
  fi

  if [ -n "$FORCE_BUILD" ]; then
    # build
    log::info "[$(timestamp)][flow] force building ..."
    eunomia::build
  else
    log::info "[$(timestamp)][flow] checking ..."
    if [ "$(eunomia::is_built)" != "true" ]; then
      # build
      log::info "[$(timestamp)][flow] no cache, building ..."
      eunomia::build
    else
      log::info "[$(timestamp)][flow] loading cache ..."
      # @TODO create build dir for export and other steps
      mkdir -p $PLUGIN_EUNOMIA_BUILD_ID_DIR
    fi
  fi

  # export
  log::info "[flow] exporting ..."
  eunomia::export

  # done
  log::info "[flow] done"
  eunomia::task_queue_done
}

run() {
  core $@
}

run $@
