#!/bin/bash

# fix tee modify the exit code: https://stackoverflow.com/questions/6871859/piping-command-output-to-tee-but-also-save-exit-code-of-command
set -o pipefail

help() {
  echo "Usage:"
  echo "  zmicro eunomia build"
}

core() {
  if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
    exit 0
  fi

  # if [ "$(zmicro fn os::is_docker)" != "true" ]; then
  #   log::error "[$(timestamp)][build] the command(flow) can only be run in docker"
  #   exit 1
  # fi

  if [ -z "$EUNOMIA_BUILD_ID" ]; then
    log::error "[$(timestamp)][build] EUNOMIA_BUILD_ID is required"
    exit 1
  fi

  if [ "$PLUGIN_EUNOMIA_TASK_QUEUE_IS_ENABLED" = "true" ]; then
    log::info "[$(timestamp)][build] task queue is enabled"

    while true; do
      # random sleep
      local wait_time=$(os::random_int 30 10)
      # log::info "[$(timestamp)][build] wait $wait_time seconds ..."
      os::wait $wait_time

      local total=$(eunomia::task_queue_count_total)
      local running=$(eunomia::task_queue_count_running)

      # @TODO >= 80%
      if [ "$(lock::request eunomia_flow_queue_alert 10)" = "true" ]; then
        if [ "$running" = "$PLUGIN_EUNOMIA_TASK_QUEUE_COCURRENCY" ]; then
          notify::feishu $PLUGIN_EUNOMIA_NOTIFICATION_FEISHU_URL "[$(timestamp)] 任务队列预警" "状态: 当前队列已满（${running}/${total}）\n当前时间: $(timestamp)"
        elif [ "$running" -gt "3" ]; then
          notify::feishu $PLUGIN_EUNOMIA_NOTIFICATION_FEISHU_URL "[$(timestamp)] 任务队列预警" "状态: 当前队列利用率 > 80%（${running}/${total}）\n当前时间: $timestamp"
        fi
      fi

      if [ "$(eunomia::task_queue_is_available)" = "true" ]; then
        log::info "[$(timestamp)][build] task queue is available(running: ${running}, total: ${total}), go ..."
        local start_result=$(eunomia::task_queue_start)
        if [ "$start_result" = "true" ]; then
          log::info "[$(timestamp)][build] task is started"
          break
        else
          log::info "[$(timestamp)][build] task start error($start_result), waiting ..."

          if [ "$(lock::request eunomia_flow_queue_error 10)" = "true" ]; then
            notify::feishu $PLUGIN_EUNOMIA_NOTIFICATION_FEISHU_URL "[$(timestamp)] 任务队列异常" "状态: 发生错误\n错误详情: ${start_result}\n当前时间: $(timestamp)"
          fi
        fi
      else
        log::info "[$(timestamp)][build] task queue is full(running: ${running}, total: ${total}), waiting ..."
      fi
    done
  fi

  # build
  log::info "[$(timestamp)][build] start to build ..."
  eunomia::build
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)][build] failed to build"
    eunomia::task_queue_done >>/dev/null
    exit 1
  fi

  log::info "[$(timestamp)][build] env PLUGIN_EUNOMIA_EXPORT_DISABLE: $PLUGIN_EUNOMIA_EXPORT_DISABLE"
  if [ "$PLUGIN_EUNOMIA_EXPORT_DISABLE" != "true" ]; then
    # export
    log::info "[$(timestamp)][build] exporting ..."
    eunomia::export
    if [ "$?" != "0" ]; then
      log::error "[$(timestamp)][build] failed to export"
      eunomia::task_queue_done >>/dev/null
      exit 1
    fi
  fi

  # done
  log::info "[$(timestamp)][build] done"
  eunomia::task_queue_done >>/dev/null
}

run() {
  # if [ -z "$EUNOMIA_BUILD_ID" ]; then
  #   log::error "[$(timestamp)][docker][flow] EUNOMIA_BUILD_ID is required"
  #   exit 1
  # fi

  # # must mkdir or tee log file not found in docker flow
  # if [ ! -d "$EUNOMIA_BUILD_DIR" ]; then
  #   mkdir -p $EUNOMIA_BUILD_DIR
  # fi

  # # start
  # eunomia::hook_build_start

  # set -o pipefail
  # core "$@" | tee -a $EUNOMIA_BUILD_LOG
  # # end
  # if [ "$?" != "0" ]; then
  #   eunomia::hook_build_failed
  #   log::info "[$(timestamp)][docker_flow] flow failed."
  #   exit 1
  # else
  #   eunomia::hook_build_succeed
  #   log::info "[$(timestamp)][docker_flow] flow succeed."
  #   exit 0
  # fi

  local log=$EUNOMIA_BUILD_DIR/build.log
  core "$@" 2>&1 | tee -a $log
  if [ "$?" != "0" ]; then
    eunomia::hook_log $log
    exit 1
  else
    eunomia::hook_log $log
    exit 0
  fi
}

run "$@"
