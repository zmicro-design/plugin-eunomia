#!/bin/bash

eunomia::export() {
  if [ -z "$PLUGIN_EUNOMIA_EXPORT_ID_DIR" ]; then
    log::error "[$(timestamp)][eunomia::export] PLUGIN_EUNOMIA_EXPORT_ID_DIR is required"
    return 1
  fi

  if [ -d "$PLUGIN_EUNOMIA_EXPORT_ID_DIR" ]; then
    log::error "[$(timestamp)][eunomia::export] export directory($PLUGIN_EUNOMIA_EXPORT_ID_DIR) already exists"
    return 1
  fi

  log::info "[$(timestamp)][eunomia::export] image: $PLUGIN_EUNOMIA_EXPORT_RUNNER_IMAGE ..."

  # ensure container removed
  log::info "[$(timestamp)][eunomia::export] remove container if exists ..."
  docker rm -f $PLUGIN_EUNOMIA_EXPORT_RUNNER_NAME >> /dev/null 2>&1
  # if [ "$EUNOMIA_DOCKER_BUILDX_PLATFORMS" = "linux/arm64" ]; then
  #     docker pull --platform linux/arm64 $PLUGIN_EUNOMIA_EXPORT_RUNNER_IMAGE
  # fi
  # docker run -d --name $PLUGIN_EUNOMIA_EXPORT_RUNNER_NAME $PLUGIN_EUNOMIA_EXPORT_RUNNER_IMAGE >> /dev/null
  
  log::info "[$(timestamp)][eunomia::export] start container(name: $PLUGIN_EUNOMIA_EXPORT_RUNNER_NAME) with image(${PLUGIN_EUNOMIA_EXPORT_RUNNER_IMAGE}) ..."
  docker run \
    -d \
    --platform ${EUNOMIA_DOCKER_BUILDX_PLATFORMS:-"linux/amd64"} \
    --name $PLUGIN_EUNOMIA_EXPORT_RUNNER_NAME $PLUGIN_EUNOMIA_EXPORT_RUNNER_IMAGE \
    sleep 10000 >> /dev/null
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)][eunomia::export] failed to start runner container"
    return 1
  fi

  log::info "[$(timestamp)][eunomia::export] checking data dir: $EUNOMIA_BUILD_EXPORT_DIR ..."
  docker exec $PLUGIN_EUNOMIA_EXPORT_RUNNER_NAME test -d $EUNOMIA_BUILD_EXPORT_DIR >> /dev/null
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)][eunomia::export] ignore export, no data found"
    docker rm -f $PLUGIN_EUNOMIA_EXPORT_RUNNER_NAME >> /dev/null 2>&1
    return 0
  fi
  
  log::info "[$(timestamp)][eunomia::export] copy from docker:$EUNOMIA_BUILD_EXPORT_DIR to host:$PLUGIN_EUNOMIA_EXPORT_ID_DIR"
  docker cp $PLUGIN_EUNOMIA_EXPORT_RUNNER_NAME:${EUNOMIA_BUILD_EXPORT_DIR} $PLUGIN_EUNOMIA_EXPORT_ID_DIR >> /dev/null
  if [ "$?" != "0" ]; then
    # log::error "[$(timestamp)][eunomia::export] failed to export when copying from runner"
    # return 1

    log::info "[$(timestamp)][eunomia::export] not a standard exporter, ignore export"
    docker rm -f $PLUGIN_EUNOMIA_EXPORT_RUNNER_NAME >> /dev/null 2>&1
    rm -rf $PLUGIN_EUNOMIA_EXPORT_ID_DIR
    return 0
  fi

  log::info "[$(timestamp)][eunomia::export] exporting to $PLUGIN_EUNOMIA_EXPORT_ID_PKG ..."
  cd $PLUGIN_EUNOMIA_EXPORT_ID_DIR
  tar -zcvf $PLUGIN_EUNOMIA_EXPORT_ID_PKG . >> /dev/null
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)][eunomia::export] failed to export when compressing"
    return 1
  fi

  log::info "[$(timestamp)][eunomia::export] clean container and temp dir ..."
  docker rm -f $PLUGIN_EUNOMIA_EXPORT_RUNNER_NAME >> /dev/null 2>&1
  rm -rf $PLUGIN_EUNOMIA_EXPORT_ID_DIR

  if [ -n "$PLUGIN_EUNOMIA_EXPORT_DIR_OSS" ]; then
    log::info "[$(timestamp)][eunomia::export] upload $PLUGIN_EUNOMIA_EXPORT_ID_PKG to oss: $PLUGIN_EUNOMIA_EXPORT_DIR_OSS"
    mv $PLUGIN_EUNOMIA_EXPORT_ID_PKG $PLUGIN_EUNOMIA_EXPORT_DIR_OSS
  fi

  log::info "[$(timestamp)][eunomia::export] done"
}

export -f eunomia::export
