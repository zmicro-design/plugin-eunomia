#!/bin/bash

eunomia::build() {
  if [ -z "$EUNOMIA_BUILD_GIT_DIR" ]; then
    log::error "[eunomia::build] EUNOMIA_BUILD_GIT_DIR is required"
    return 1
  fi

  if [ ! -d "$EUNOMIA_BUILD_GIT_DIR" ]; then
    log::error "[eunomia::build] EUNOMIA_BUILD_GIT_DIR($EUNOMIA_BUILD_GIT_DIR) not found, you must run prepare first"
    return 1
  fi

  #    Solution 2 => 本地 Dockerfile 优先级小于于全局服务 zmicro dockerfiles 中的
  log::info "[$(timestamp)] checking Dockerfile exist ..."
  if [ -d "$PLUGIN_EUNOMIA_DOCKERFILE_DIR_FOR_GIT_REPO" ]; then
    log::info "[$(timestamp)] dockerfiles found repo, so use repo ..." 
    # RSYNC DOKCERFILE_DIR/*
    # @TODO with "DIR/" suffix copy file
    if [ -n "$PLUGIN_EUNOMIA_DOCKERFILE_MODULE" ]; then
      log::info "[$(timestamp)] using PLUGIN_EUNOMIA_DOCKERFILE_MODULE(${PLUGIN_EUNOMIA_DOCKERFILE_DIR_FOR_GIT_REPO}/$PLUGIN_EUNOMIA_DOCKERFILE_MODULE/) ..."
      # 子模块
      rsync -av ${PLUGIN_EUNOMIA_DOCKERFILE_DIR_FOR_GIT_REPO}/$PLUGIN_EUNOMIA_DOCKERFILE_MODULE/ $EUNOMIA_BUILD_GIT_DIR
    else
      log::info "[$(timestamp)] using PLUGIN_EUNOMIA_DOCKERFILE_MODULE(${PLUGIN_EUNOMIA_DOCKERFILE_DIR_FOR_GIT_REPO}/) ..."
      # 主模块
      # rsync -av --exclude="$PLUGIN_EUNOMIA_DOCKERFILE_ENV_FOR_GIT_REPO" ${PLUGIN_EUNOMIA_DOCKERFILE_DIR_FOR_GIT_REPO}/ $EUNOMIA_BUILD_GIT_DIR
      rsync -av ${PLUGIN_EUNOMIA_DOCKERFILE_DIR_FOR_GIT_REPO}/ $EUNOMIA_BUILD_GIT_DIR
    fi
  else
    log::info "[$(timestamp)] dockerfiles not found repo, so use local Dockerfile ..." 
  fi

  export PLUGIN_EUNOMIA_ENV_SHELL=${EUNOMIA_BUILD_DIR}/.env.shell
  # env shell
  log::info "[$(timestamp)] start to generate env shell at ${PLUGIN_EUNOMIA_ENV_SHELL} ..."
  plugin::run_zx env_shell
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)] failed to generate env shell at ${PLUGIN_EUNOMIA_ENV_SHELL}."
    return 1
  fi
  log::success "[$(timestamp)] succeed to generate env shell at ${PLUGIN_EUNOMIA_ENV_SHELL} ..."


  # ADD build files for dockerfile
  cat <<EOF >$EUNOMIA_BUILD_GIT_DIR/build.history.eunomia
# GIT
EUNOMIA_GIT_REPO_URL: $PLUGIN_EUNOMIA_GIT_REPO_URL
EUNOMIA_GIT_REPO_NAME: $PLUGIN_EUNOMIA_GIT_REPO_NAME
EUNOMIA_GIT_BRANCH: $PLUGIN_EUNOMIA_GIT_BRANCH
EUNOMIA_GIT_COMMIT: $PLUGIN_EUNOMIA_GIT_COMMIT
EUNOMIA_GIT_COMMIT_MESSAGE: $PLUGIN_EUNOMIA_GIT_COMMIT_MESSAGE
EUNOMIA_GIT_COMMIT_AUTHOR: $PLUGIN_EUNOMIA_GIT_COMMIT_AUTHOR
EUNOMIA_GIT_COMMIT_TIMESTAMP: $PLUGIN_EUNOMIA_GIT_COMMIT_TIMESTAMP
# Builder
EUNOMIA_BUILD_ID: $EUNOMIA_BUILD_ID
EUNOMIA_BUILD_AUTHOR: $EUNOMIA_BUILD_AUTHOR
EUNOMIA_BUILD_AUTHOR_EMAIL: $EUNOMIA_BUILD_AUTHOR_EMAIL
EUNOMIA_BUILD_TIMESTAMP: $EUNOMIA_BUILD_TIMESTAMP
EUNOMIA_BUILD_FROM: $EUNOMIA_BUILD_FROM
# Project
EUNOMIA_PROJECT_ID: $EUNOMIA_PROJECT_ID
EUNOMIA_TASK_ID: $EUNOMIA_TASK_ID
EUNOMIA_DEPLOYMENT_ID: $EUNOMIA_DEPLOYMENT_ID
EUNOMIA_JOB_ID: $EUNOMIA_JOB_ID
# Module
EUNOMIA_DOCKERFILE_MODULE: $PLUGIN_EUNOMIA_DOCKERFILE_MODULE
EOF

  # @DEPRECIATED @TO_REMOVE @TODO Compatible with old version
  cat $EUNOMIA_BUILD_GIT_DIR/build.history.eunomia >$EUNOMIA_BUILD_GIT_DIR/build.eunomia.js

  export PIPELINE_DOCKER_BUILD_ARGS_ENVFILE=$PLUGIN_EUNOMIA_ENV_SHELL
  zmicro pipeline bp
  if [ "$?" != "0" ]; then
    log::error "[eunomia::build] failed to build"
    return 1
  fi

  log::info "[eunomia::build] done"
}

export -f eunomia::build
