#!/bin/bash

eunomia::docker_flow() {
  if [ -z "$PLUGIN_EUNOMIA_BUILD_ID" ]; then
    log::error "[$(timestamp)][docker_flow] PLUGIN_EUNOMIA_BUILD_ID is required"
    return 1
  fi

  if [ -z "$PLUGIN_EUNOMIA_DOWNLOAD_PKG" ]; then
    log::error "[$(timestamp)][docker_flow] PLUGIN_EUNOMIA_DOWNLOAD_PKG is required"
    return 1
  fi

  if [ ! -f "$PLUGIN_EUNOMIA_DOWNLOAD_PKG" ]; then
    log::error "[$(timestamp)][docker_flow] PLUGIN_EUNOMIA_DOWNLOAD_PKG($PLUGIN_EUNOMIA_DOWNLOAD_PKG) not found"
    return 1
  fi

  echo $PLUGIN_EUNOMIA_DOWNLOAD_PKG | grep $PLUGIN_EUNOMIA_TMP_DIR >>/dev/null 2>&1
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)][docker_flow] PLUGIN_EUNOMIA_DOWNLOAD_PKG(${PLUGIN_EUNOMIA_DOWNLOAD_PKG}) must be starts with ${PLUGIN_EUNOMIA_TMP_DIR}"
    return 1
  fi

  log::info "[$(timestamp)][docker_flow] flow start ..."

  # start
  eunomia::hook_start

  cd ${PLUGIN_DIR}/config/service
  docker-compose exec \
    -T \
    -e PLUGIN_EUNOMIA_BUILD_ID="${PLUGIN_EUNOMIA_BUILD_ID}" \
    -e PLUGIN_EUNOMIA_DOWNLOAD_PKG="${PLUGIN_EUNOMIA_DOWNLOAD_PKG}" \
    -e FORCE_BUILD="${FORCE_BUILD}" \
    zmicro_plugin_eunomia \
    zmicro eunomia flow

  # end
  if [ "$?" != "0" ]; then
    eunomia::hook_failed
    log::info "[$(timestamp)][docker_flow] flow failed."
    return 1
  else
    eunomia::hook_succeed
    log::info "[$(timestamp)][docker_flow] flow succeed."
    return 0
  fi
}

export -f eunomia::docker_flow
