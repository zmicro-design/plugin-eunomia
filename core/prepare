#!/bin/bash

# gvm::current gets the current version of Go
eunomia::prepare() {
  if [ -z "$PLUGIN_EUNOMIA_BUILD_ID" ]; then
    log::error "[prepare] PLUGIN_EUNOMIA_BUILD_ID is required"
    exit 1
  fi

  if [ -z "$PLUGIN_EUNOMIA_GIT_REPO_NAME" ]; then
    log::error "[eunomia::build] PLUGIN_EUNOMIA_GIT_REPO_NAME is required"
    exit 1
  fi

  if [ -z "$(echo $PLUGIN_EUNOMIA_GIT_REPO_NAME | awk -F='/' '{print $2}')" ]; then
    log::error "[eunomia::build] PLUGIN_EUNOMIA_GIT_REPO_NAME is invalid, must be in the format of 'owner/repo'"
    exit 1
  fi

  # BUILD
  export PLUGIN_EUNOMIA_BUILD_ID=${PLUGIN_EUNOMIA_BUILD_ID}
  # export PLUGIN_EUNOMIA_BUILD_HASH=${PLUGIN_EUNOMIA_BUILD_HASH}

  # export PLUGIN_EUNOMIA_BUILD_HASH=$(md5sum $PLUGIN_EUNOMIA_GIT_REPO_PKG | awk -F " " '{print $1}')
  export PLUGIN_EUNOMIA_BUILD_ID_DIR=$PLUGIN_EUNOMIA_BUILD_DIR/$PLUGIN_EUNOMIA_BUILD_ID
  export PLUGIN_EUNOMIA_BUILD_ID_PKG=${PLUGIN_EUNOMIA_BUILD_ID_DIR}.tar.gz

  export PLUGIN_EUNOMIA_GIT_REPO_DIR=$PLUGIN_EUNOMIA_GIT_DIR/$PLUGIN_EUNOMIA_BUILD_ID
  export PLUGIN_EUNOMIA_GIT_DOT_ENV=$PLUGIN_EUNOMIA_GIT_REPO_DIR/.eunomia

  export PLUGIN_EUNOMIA_GIT_REPO_NAME=$PLUGIN_EUNOMIA_GIT_REPO_NAME
  export PLUGIN_EUNOMIA_GIT_REPO_PKG=$PLUGIN_EUNOMIA_GIT_REPO_PKG
  # Dockerfile
  export PLUGIN_EUNOMIA_GIT_REPO_DOCKERFILE=${PLUGIN_DIR}/config/dockerfiles/${PLUGIN_EUNOMIA_GIT_REPO_NAME}/Dockerfile
  if [ ! -f "$PLUGIN_EUNOMIA_GIT_REPO_DOCKERFILE" ]; then
    log::error "[eunomia::build] Dockerfile not found at for $PLUGIN_EUNOMIA_GIT_REPO_NAME"
    exit 1
  fi

  export PLUGIN_EUNOMIA_DOCKER_REGISTRY=${PLUGIN_EUNOMIA_DOCKER_REGISTRY:-"docker-ta.thinkingdata.cn"}
  if [ -z "$PLUGIN_EUNOMIA_DOCKER_REGISTRY" ]; then
    log::error "[eunomia::build] PLUGIN_EUNOMIA_DOCKER_REGISTRY is required"
    exit 1
  fi

  # # PIPELINE
  # export PIPELINE_BUILD_ID=${PLUGIN_EUNOMIA_BUILD_ID}
  # export PIPELINE_BUILD_CONTEXT=$PLUGIN_EUNOMIA_BUILD_ID_DIR
  # export PIPELINE_GIT_REPOSITORY_DIR=$PLUGIN_EUNOMIA_GIT_REPO_DIR
  # export PIPELINE_DOCKER_REGISTRY=$PLUGIN_EUNOMIA_DOCKER_REGISTRY
  # export PIPELINE_IMAGE_NAME=$PLUGIN_EUNOMIA_GIT_REPO_NAME
  # export PIPELINE_IMAGE_TAGS=commit_${PLUGIN_EUNOMIA_BUILD_ID}

  # EXPORT
  export PLUGIN_EUNOMIA_EXPORT_ID_DIR=${PLUGIN_EUNOMIA_EXPORT_DIR}/$PLUGIN_EUNOMIA_BUILD_ID
  export PLUGIN_EUNOMIA_EXPORT_ID_PKG=${PLUGIN_EUNOMIA_EXPORT_ID_DIR}.tar.gz

  #
  export PLUGIN_EUNOMIA_RUNNER_NAME=zpipeline_eunomia_${PLUGIN_EUNOMIA_BUILD_ID}
  if [ -n "$PIPELINE_IMAGE_TAGS" ]; then
    export PLUGIN_EUNOMIA_RUNNER_IMAGE=$PLUGIN_EUNOMIA_DOCKER_REGISTRY/$PIPELINE_IMAGE_NAME:$PIPELINE_IMAGE_TAGS
  fi

  if [ ! -d "$PLUGIN_EUNOMIA_GIT_DIR" ]; then
    mkdir -p $PLUGIN_EUNOMIA_GIT_DIR
  fi

  if [ ! -d "$PLUGIN_EUNOMIA_BUILD_DIR" ]; then
    mkdir -p $PLUGIN_EUNOMIA_BUILD_DIR
  fi

  if [ -z "$PLUGIN_EUNOMIA_GIT_REPO_NAME" ]; then
    log::error "[prepare] PLUGIN_EUNOMIA_GIT_REPO_NAME is required"
    exit 1
  fi

  if [ -z "$PLUGIN_EUNOMIA_GIT_REPO_PKG" ]; then
    log::error "[prepare] PLUGIN_EUNOMIA_GIT_REPO_PKG is required"
    exit 1
  fi

  if [ ! -f "$PLUGIN_EUNOMIA_GIT_REPO_PKG" ]; then
    log::error "[prepare] file($PLUGIN_EUNOMIA_GIT_REPO_PKG) is not found"
    exit 1
  fi

  mkdir -p $PLUGIN_EUNOMIA_GIT_REPO_DIR
  # mkdir -p $PLUGIN_EUNOMIA_BUILD_ID_DIR


  if [ -d "$PLUGIN_EUNOMIA_BUILD_ID_DIR" ]; then
    rm -rf $PLUGIN_EUNOMIA_BUILD_ID_DIR
  fi
  
  # PIPELINE
  export PIPELINE_BUILD_ID=${PLUGIN_EUNOMIA_BUILD_ID}
  export PIPELINE_BUILD_CONTEXT=$PLUGIN_EUNOMIA_BUILD_ID_DIR
  export PIPELINE_GIT_REPOSITORY_DIR=$PLUGIN_EUNOMIA_GIT_REPO_DIR
  export PIPELINE_DOCKER_REGISTRY=$PLUGIN_EUNOMIA_DOCKER_REGISTRY
  export PIPELINE_IMAGE_NAME=$PLUGIN_EUNOMIA_GIT_REPO_NAME
  export PIPELINE_IMAGE_TAGS=commit_${PLUGIN_EUNOMIA_BUILD_HASH:-${PLUGIN_EUNOMIA_BUILD_ID}}

  if [ ! -f "$PLUGIN_EUNOMIA_BUILD_ID_PKG" ]; then
    cp $PLUGIN_EUNOMIA_GIT_REPO_PKG $PLUGIN_EUNOMIA_BUILD_ID_PKG
  fi

  # APP
  if [ -z "$(ls $PLUGIN_EUNOMIA_GIT_REPO_DIR)" ]; then
    tar -zxvf $PLUGIN_EUNOMIA_BUILD_ID_PKG -C $PLUGIN_EUNOMIA_GIT_REPO_DIR
  fi

  # check env .eunomia
  # echo "check env .eunomia: $PLUGIN_EUNOMIA_GIT_DOT_ENV"
  if [ -f "$PLUGIN_EUNOMIA_GIT_DOT_ENV" ]; then
    # echo "load env .eunomia: $PLUGIN_EUNOMIA_GIT_DOT_ENV"
    dotenv::load $PLUGIN_EUNOMIA_GIT_DOT_ENV

    # echo "check env PLUGIN_EUNOMIA_BUILD_HASH: $PLUGIN_EUNOMIA_BUILD_HASH"
    # echo "check env PIPELINE_BUILD_HASH: $PIPELINE_BUILD_HASH"
    if [ -n "$PLUGIN_EUNOMIA_BUILD_HASH" ]; then
      export PIPELINE_IMAGE_TAGS=commit_${PLUGIN_EUNOMIA_BUILD_HASH}
    elif [ -n "$PIPELINE_BUILD_HASH" ]; then
      export PIPELINE_IMAGE_TAGS=commit_${PIPELINE_BUILD_HASH}
    fi

    export PLUGIN_EUNOMIA_RUNNER_IMAGE=$PLUGIN_EUNOMIA_DOCKER_REGISTRY/$PIPELINE_IMAGE_NAME:$PIPELINE_IMAGE_TAGS
  fi
}

export -f eunomia::prepare
