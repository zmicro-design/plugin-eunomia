#!/bin/bash

eunomia::hook_log() {
  local log_file=$1
  if [ ! -f "$log_file" ]; then
    log::info "[$(timestamp)][eunomia::hook_log] log file($log_file) is not found"
    return
  fi

  if [ -z "$EUNOMIA_BUILD_DIR" ]; then
    log::error "[eunomia::hook_log] EUNOMIA_BUILD_DIR is required"
    return 1
  fi

  if [ ! -d "$EUNOMIA_BUILD_DIR" ]; then
    log::error "[eunomia::hook_log] EUNOMIA_BUILD_DIR($EUNOMIA_BUILD_DIR) not found"
    return 1
  fi

  if [ -n "$EUNOMIA_LOG_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_log] call $EUNOMIA_LOG_HOOK with log(file: $log_file)..."

    curl \
      -s \
      -X POST \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" \
      --data-binary "@$log_file" \
      $EUNOMIA_LOG_HOOK >>/dev/null

    sleep 1
  fi
}

eunomia::hook_info_supply() {
  if [ -n "$EUNOMIA_INFO_SUPPLY_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_info_supply] call $EUNOMIA_INFO_SUPPLY_HOOK ..."

    curl \
      -s \
      -X POST $EUNOMIA_INFO_SUPPLY_HOOK \
      -H "Content-Type: application/json" \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" \
      --data-binary @- <<EOF
{
    "git_repo_url": "$EUNOMIA_GIT_REPO_URL",
    "git_repo_name": "$EUNOMIA_GIT_REPO_NAME",
    "git_branch": "$EUNOMIA_GIT_BRANCH",
    "git_commit": "$EUNOMIA_GIT_COMMIT",
    "git_commit_message": "$EUNOMIA_GIT_COMMIT_MESSAGE",
    "git_commit_author": "$EUNOMIA_GIT_COMMIT_AUTHOR",
    "git_commit_timestamp": "$EUNOMIA_GIT_COMMIT_TIMESTAMP",
    "build_id": "$EUNOMIA_BUILD_ID",
    "build_timestamp": "$EUNOMIA_BUILD_TIMESTAMP",
    "build_author": "$EUNOMIA_BUILD_AUTHOR",
    "build_author_email": "$EUNOMIA_BUILD_AUTHOR_EMAIL"
}
EOF
  fi
}

eunomia::hook_start() {
  if [ -n "$EUNOMIA_START_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_start] call $EUNOMIA_START_HOOK ..."

    local FLOW_PIPELINE_ID=$(echo $EUNOMIA_BUILD_ID | awk -F '_' '{print $1}')
    local FLOW_BUILD_ID=$(echo $EUNOMIA_BUILD_ID | awk -F '_' '{print $2}')

    curl \
      -s \
      -X POST $EUNOMIA_START_HOOK \
      -H "Content-Type: application/json" \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" \
      --data-binary @- <<EOF
{
    "flow_pipeline_id": "$FLOW_PIPELINE_ID",
    "flow_build_id": "$FLOW_BUILD_ID",
    "git_repo_url": "$EUNOMIA_GIT_REPO_URL",
    "git_repo_name": "$EUNOMIA_GIT_REPO_NAME",
    "git_branch": "$EUNOMIA_GIT_BRANCH",
    "git_commit": "$EUNOMIA_GIT_COMMIT",
    "git_commit_message": "$EUNOMIA_GIT_COMMIT_MESSAGE",
    "git_commit_author": "$EUNOMIA_GIT_COMMIT_AUTHOR",
    "git_commit_timestamp": "$EUNOMIA_GIT_COMMIT_TIMESTAMP",
    "build_id": "$EUNOMIA_BUILD_ID",
    "build_timestamp": "$EUNOMIA_BUILD_TIMESTAMP",
    "build_author": "$EUNOMIA_BUILD_AUTHOR",
    "build_author_email": "$EUNOMIA_BUILD_AUTHOR_EMAIL"
}
EOF

    if [ "$EUNOMIA_SKIP_BUILD_STAGE" = "true" ]; then
      os::wait $(os::random_int 30 10)
    fi
  fi
}

eunomia::hook_succeed() {
  if [ -n "$EUNOMIA_SUCCEED_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_succeed] call $EUNOMIA_SUCCEED_HOOK ..."
    curl -s -X POST $EUNOMIA_SUCCEED_HOOK \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" >>/dev/null
  fi
}

eunomia::hook_failed() {
  if [ -n "$EUNOMIA_FAILED_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_failed] call $EUNOMIA_FAILED_HOOK ..."
    curl \
      -s \
      -X POST $EUNOMIA_FAILED_HOOK\
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" >>/dev/null
  fi
}

eunomia::hook_checkout_start() {
  if [ -n "$EUNOMIA_CHECKOUT_START_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_checkout_start] call $EUNOMIA_CHECKOUT_START_HOOK ..."

    local FLOW_PIPELINE_ID=$(echo $EUNOMIA_BUILD_ID | awk -F '_' '{print $1}')
    local FLOW_BUILD_ID=$(echo $EUNOMIA_BUILD_ID | awk -F '_' '{print $2}')

    curl \
      -s \
      -X POST $EUNOMIA_CHECKOUT_START_HOOK \
      -H "Content-Type: application/json" \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" \
      --data-binary @- <<EOF
{
    "build_id": "$EUNOMIA_BUILD_ID",
    "task_id": "$EUNOMIA_TASK_ID"
}
EOF
  fi
}

eunomia::hook_checkout_succeed() {
  # info supply
  # eunomia::hook_info_supply

  if [ -n "$EUNOMIA_CHECKOUT_SUCCEED_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_checkout_succeed] call $EUNOMIA_CHECKOUT_SUCCEED_HOOK ..."
    curl -s -X POST $EUNOMIA_CHECKOUT_SUCCEED_HOOK \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" >>/dev/null
  fi
}

eunomia::hook_checkout_failed() {
  if [ -n "$EUNOMIA_CHECKOUT_FAILED_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_checkout_failed] call $EUNOMIA_CHECKOUT_FAILED_HOOK ..."
    curl -s -X POST $EUNOMIA_CHECKOUT_FAILED_HOOK \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" >>/dev/null
  fi
}

eunomia::hook_build_start() {
  if [ -n "$EUNOMIA_BUILD_START_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_build_start] call $EUNOMIA_BUILD_START_HOOK ..."

    local FLOW_PIPELINE_ID=$(echo $EUNOMIA_BUILD_ID | awk -F '_' '{print $1}')
    local FLOW_BUILD_ID=$(echo $EUNOMIA_BUILD_ID | awk -F '_' '{print $2}')

    curl \
      -s \
      -X POST $EUNOMIA_BUILD_START_HOOK \
      -H "Content-Type: application/json" \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET"
      --data-binary @- <<EOF
{
    "build_id": "$EUNOMIA_BUILD_ID",
    "task_id": "$EUNOMIA_TASK_ID"
}
EOF
  fi
}

eunomia::hook_build_succeed() {
  if [ -n "$EUNOMIA_BUILD_SUCCEED_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_build_succeed] call $EUNOMIA_BUILD_SUCCEED_HOOK ..."
    curl -s -X POST $EUNOMIA_BUILD_SUCCEED_HOOK \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" >>/dev/null
  fi
}

eunomia::hook_build_failed() {
  if [ -n "$EUNOMIA_BUILD_FAILED_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_build_failed] call $EUNOMIA_BUILD_FAILED_HOOK ..."
    curl -s -X POST $EUNOMIA_BUILD_FAILED_HOOK \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" >>/dev/null
  fi
}

eunomia::hook_deploy_start() {
  if [ -n "$EUNOMIA_DEPLOY_START_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_deploy_start] call $EUNOMIA_DEPLOY_START_HOOK ..."

    local FLOW_PIPELINE_ID=$(echo $EUNOMIA_BUILD_ID | awk -F '_' '{print $1}')
    local FLOW_BUILD_ID=$(echo $EUNOMIA_BUILD_ID | awk -F '_' '{print $2}')

    curl \
      -s \
      -X POST $EUNOMIA_DEPLOY_START_HOOK \
      -H "Content-Type: application/json" \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" \
      --data-binary @- <<EOF
{
    "build_id": "$EUNOMIA_BUILD_ID",
    "task_id": "$EUNOMIA_TASK_ID",
    "deploy_id": "$EUNOMIA_DEPLOYMENT_ID"
}
EOF
  fi
}

eunomia::hook_deploy_succeed() {
  if [ -n "$EUNOMIA_DEPLOY_SUCCEED_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_deploy_succeed] call $EUNOMIA_DEPLOY_SUCCEED_HOOK ..."
    curl -s -X POST $EUNOMIA_DEPLOY_SUCCEED_HOOK \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" >>/dev/null
  fi

  eunomia::hook_log $EUNOMIA_DEPLOY_LOG
}

eunomia::hook_deploy_failed() {
  if [ -n "$EUNOMIA_DEPLOY_FAILED_HOOK" ]; then
    log::info "[$(timestamp)][eunomia::hook_deploy_failed] call $EUNOMIA_DEPLOY_FAILED_HOOK ..."
    curl -s -X POST $EUNOMIA_DEPLOY_FAILED_HOOK \
      -H "X-Client-ID: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_ID" \
      -H "X-Client-Secret: $PLUGIN_EUNOMIA_CONFIG_CENTER_CLIENT_SECRET" >>/dev/null
  fi

  eunomia::hook_log $EUNOMIA_DEPLOY_LOG
}

export -f eunomia::hook_log
export -f eunomia::hook_info_supply

export -f eunomia::hook_start
export -f eunomia::hook_succeed
export -f eunomia::hook_failed

export -f eunomia::hook_checkout_start
export -f eunomia::hook_checkout_succeed
export -f eunomia::hook_checkout_failed

export -f eunomia::hook_build_start
export -f eunomia::hook_build_succeed
export -f eunomia::hook_build_failed

export -f eunomia::hook_deploy_start
export -f eunomia::hook_deploy_succeed
export -f eunomia::hook_deploy_failed
