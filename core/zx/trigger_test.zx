$.verbose = false;

const AUTO_TEST_TRIGGER_SERVER = process.env.EUNOMIA_AUTO_TEST_TRIGGER_SERVER;
const AUTO_TEST_SERVER = process.env.EUNOMIA_AUTO_TEST_SERVER;

async function main() {
  // trigger test
  const triggerResponse = await fetch(`${AUTO_TEST_TRIGGER_SERVER}/apt/openapi/ci/trigger`, {
    method: 'POST',
    headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      "appName": "ta-common-service",
      "domain": process.env.EUNOMIA_TASK_TEST_URL,
      "companyCode": "thinkingdata",
      "type": "normal",
      "runEnv": "api",
      "env": "thinkingdata",
      "pid": process.env.EUNOMIA_DEPLOYMENT_ID,
      "taskIds": process.env.EUNOMIA_TASK_TEST_TASKIDS.split(','),
    }),
  });
  if (!triggerResponse.ok) {
    throw new Error(`unexpected trigger response ${triggerResponse.statusText}`);
  }

  const triggerResponseData = await triggerResponse.json();
  if (triggerResponseData.code !== "1000") {
    throw new Error(`unexpected trigger response ${JSON.stringify(triggerResponseData, null, 2)}`);
  }

  // report test url
  const reportResponse = await fetch(process.env.EUNOMIA_TEST_REPORT_HOOK, {
    method: 'POST',
    headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      "deployment": process.env.EUNOMIA_DEPLOYMENT_ID,
      "report_url": `${AUTO_TEST_SERVER}/debug?executeTag=${triggerResponseData?.data?.executeTag}`,
    }),
  });

  if (!reportResponse.ok) {
    throw new Error(`unexpected report response ${reportResponse.statusText}`);
  }

  const reportResponseData = await reportResponse.json();
  if (reportResponseData.code !== 200) {
    throw new Error(`unexpected report response ${JSON.stringify(reportResponseData, null, 2)}`);
  }
}

main();
