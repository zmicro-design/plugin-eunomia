#!/bin/bash

# eunomia::export_product downloads the export_product dist
eunomia::export_product() {
  if [ -z "$EUNOMIA_EXPORT_DIST_URL" ]; then
    log::error "[$(timestamp)] EUNOMIA_EXPORT_DIST_URL is required"
    return 1
  fi

  local filepath=$1
  if [ -z "$filepath" ]; then
    filepath=${EUNOMIA_EXPORT_DIST}
  fi

  if [ -z "$filepath" ]; then
    filepath=./${EUNOMIA_BUILD_ID}.tar.gz
  fi

  if [ -z "$filepath" ]; then
    log::error "[$(timestamp)] filepath is required"
    return 1
  fi

  log::info "[$(timestamp)] start to download product dist ..."
  wget -q -c $EUNOMIA_EXPORT_DIST_URL -O $filepath #>>/dev/null 2>&1
  if [ "$?" != "0" ]; then
    echo "failed to download $EUNOMIA_EXPORT_DIST to $filepath"
    exit 1
  fi
  log::info "[$(timestamp)] download product dist success"

  log::info "[$(timestamp)] start to extract product dist ..."
  tar -xvf $filepath -C . >>/dev/null 2>&1
  if [ "$?" != "0" ]; then
    echo "failed to extract $filepath"
    exit 1
  fi
  log::info "[$(timestamp)] extract product dist success"

  # clean tar.gz
  rm -rf $filepath >>/dev/null 2>&1

  log::info "[$(timestamp)] show product files ..."
  ls -al

  # log::info "[$(timestamp)] start to remove product dist ..."
  # rm -rf $filepath >>/dev/null 2>&1
  # if [ "$?" != "0" ]; then
  #     echo "failed to remove $filepath"
  #     exit 1
  # fi
  # log::info "[$(timestamp)] remove product dist success"
}

eunomia::depends_product() {
  eunomia::export_product "$@"
}

eunomia::depends_git() {
  if [ -z "$EUNOMIA_GIT_BRANCH" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_BRANCH is required"
    return 1
  fi

  if [ -z "$EUNOMIA_GIT_COMMIT" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_COMMIT is required"
    return 1
  fi

  if [ -z "$EUNOMIA_GIT_CHECKOUT_DIR" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_CHECKOUT_DIR is required"
    return 1
  fi

  if [ -z "$EUNOMIA_GIT_REPOSITORY" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_REPOSITORY is required"
    return 1
  fi

  log::info "[$(timestamp)][eunomia::depends_git] checkouting $EUNOMIA_GIT_REPOSITORY at branch $EUNOMIA_GIT_BRANCH ..."
  git::checkout $EUNOMIA_GIT_BRANCH $EUNOMIA_GIT_COMMIT $EUNOMIA_GIT_CHECKOUT_DIR $EUNOMIA_GIT_REPOSITORY
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)][eunomia::depends_git] failed to checkout $EUNOMIA_GIT_REPOSITORY at branch $EUNOMIA_GIT_BRANCH."
    return 1
  fi
}

export -f eunomia::export_product

export -f eunomia::depends_product
export -f eunomia::depends_git
