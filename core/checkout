#!/bin/bash

# eunomia::checkout - Git clone and checkout a branch of a repository
eunomia::checkout() {
  if [ -z "$EUNOMIA_GIT_BRANCH" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_BRANCH is required"
    return 1
  fi

  if [ -z "$EUNOMIA_GIT_COMMIT" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_COMMIT is required"
    return 1
  fi

  if [ -z "$EUNOMIA_GIT_CHECKOUT_DIR" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_CHECKOUT_DIR is required"
    return 1
  fi

  if [ -z "$EUNOMIA_GIT_REPOSITORY" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_REPOSITORY is required"
    return 1
  fi

  log::info "[$(timestamp)][eunomia::checkout] checkouting $EUNOMIA_GIT_REPOSITORY at branch $EUNOMIA_GIT_BRANCH ..."
  git::checkout $EUNOMIA_GIT_BRANCH $EUNOMIA_GIT_COMMIT $EUNOMIA_GIT_CHECKOUT_DIR $EUNOMIA_GIT_REPOSITORY
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)][eunomia::checkout] failed to checkout $EUNOMIA_GIT_REPOSITORY at branch $EUNOMIA_GIT_BRANCH."
    return 1
  fi

  # @TODO add .eunomia to git repository
  log::info "[$(timestamp)][eunomia::checkout] generating .eunomia at $EUNOMIA_GIT_CHECKOUT_DIR/.eunomia ..."
  cat <<EOF >$EUNOMIA_GIT_CHECKOUT_DIR/.eunomia
# GIT
# BUILD ID
EUNOMIA_BUILD_ID=${EUNOMIA_BUILD_ID}
# PIPELINE
EUNOMIA_BUILD_AUTHOR=${EUNOMIA_BUILD_AUTHOR}
EUNOMIA_BUILD_AUTHOR_EMAIL=${EUNOMIA_BUILD_AUTHOR_EMAIL}
EUNOMIA_BUILD_AUTHOR_ID=${EUNOMIA_BUILD_AUTHOR_ID}
EUNOMIA_BUILD_FROM=${EUNOMIA_BUILD_FROM}
# Project
EUNOMIA_PROJECT_ID=$EUNOMIA_PROJECT_ID
EUNOMIA_TASK_ID=$EUNOMIA_TASK_ID
EUNOMIA_DEPLOYMENT_ID=$EUNOMIA_DEPLOYMENT_ID
EUNOMIA_JOB_ID=$EUNOMIA_JOB_ID
# Hook
EUNOMIA_START_HOOK=${EUNOMIA_START_HOOK}
EUNOMIA_SUCCEED_HOOK=${EUNOMIA_SUCCEED_HOOK}
EUNOMIA_FAILED_HOOK=${EUNOMIA_FAILED_HOOK}
EUNOMIA_LOG_HOOK=${EUNOMIA_LOG_HOOK}

# EUNOMIA
EUNOMIA_GIT_BRANCH=${EUNOMIA_GIT_BRANCH}
EUNOMIA_GIT_COMMIT=${EUNOMIA_GIT_COMMIT}
EUNOMIA_GIT_CHECKOUT_DIR=${EUNOMIA_GIT_CHECKOUT_DIR}
EUNOMIA_GIT_REPOSITORY=${EUNOMIA_GIT_REPOSITORY}
#
EUNOMIA_GIT_TAG=${EUNOMIA_GIT_TAG}
CI=${CI}
EUNOMIA_CI=${EUNOMIA_CI}
EUNOMIA_RUNNER_NAME=${EUNOMIA_RUNNER_NAME}
EUNOMIA_RUNNER_OS=${EUNOMIA_RUNNER_OS}
EUNOMIA_RUNNER_PLATFORM=${EUNOMIA_RUNNER_PLATFORM}
EUNOMIA_RUNNER_ARCH=${EUNOMIA_RUNNER_ARCH}
EUNOMIA_RUNNER_USER=${EUNOMIA_RUNNER_USER}
EOF

  # log::info "[eunomia::checkout] show $EUNOMIA_GIT_CHECKOUT_DIR/.eunomia ..."
  # cat $EUNOMIA_GIT_CHECKOUT_DIR/.eunomia

  log::success "[$(timestamp)][eunomia::checkout] successfully checkout $EUNOMIA_GIT_REPOSITORY at branch $EUNOMIA_GIT_BRANCH."
}

export -f eunomia::checkout
