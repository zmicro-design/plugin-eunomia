#!/bin/bash

# eunomia::checkout - Git clone and checkout a branch of a repository
eunomia::checkout() {
  if [ -z "$EUNOMIA_GIT_BRANCH" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_BRANCH is required"
    exit 1
  fi

  if [ -z "$EUNOMIA_GIT_COMMIT" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_COMMIT is required"
    exit 1
  fi

  if [ -z "$EUNOMIA_GIT_CHECKOUT_DIR" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_CHECKOUT_DIR is required"
    exit 1
  fi

  if [ -z "$EUNOMIA_GIT_REPOSITORY" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_REPOSITORY is required"
    exit 1
  fi

  # @TODO flow base64 env
  if [ "$FLOW_CI" = "true" ]; then
    export EUNOMIA_GIT_BRANCH=$(echo $EUNOMIA_GIT_BRANCH | base64 -d)
    export EUNOMIA_GIT_COMMIT=$(echo $EUNOMIA_GIT_COMMIT | base64 -d)
    export EUNOMIA_GIT_REPOSITORY=$(echo $EUNOMIA_GIT_REPOSITORY | base64 -d)
    #
    export PLUGIN_EUNOMIA_BUILD_ID=${PIPELINE_ID}_${BUILD_NUMBER}
    # PIPELINE
    export PLUGIN_EUNOMIA_BUILD_AUTHOR=$(echo $EUNOMIA_BUILD_AUTHOR | base64 -d)
    export PLUGIN_EUNOMIA_BUILD_AUTHOR_EMAIL=$(echo $EUNOMIA_BUILD_AUTHOR_EMAIL | base64 -d)
    export PLUGIN_EUNOMIA_BUILD_AUTHOR_ID=$(echo $EUNOMIA_BUILD_AUTHOR_ID | base64 -d)
    export PLUGIN_EUNOMIA_BUILD_FROM=$(echo $EUNOMIA_BUILD_FROM | base64 -d)
    # Project
    export PLUGIN_EUNOMIA_PROJECT_ID=$(echo $EUNOMIA_PROJECT_ID | base64 -d)
    export PLUGIN_EUNOMIA_TASK_ID=$(echo $EUNOMIA_TASK_ID | base64 -d)
    export PLUGIN_EUNOMIA_DEPLOYMENT_ID=$(echo $EUNOMIA_DEPLOYMENT_ID | base64 -d)
    export PLUGIN_EUNOMIA_JOB_ID=$(echo $EUNOMIA_JOB_ID | base64 -d)
    # Hook
    export PLUGIN_EUNOMIA_START_HOOK=$(echo ${EUNOMIA_START_HOOK} | base64 -d)
    export PLUGIN_EUNOMIA_SUCCEED_HOOK=$(echo ${EUNOMIA_SUCCEED_HOOK} | base64 -d)
    export PLUGIN_EUNOMIA_FAILED_HOOK=$(echo ${EUNOMIA_FAILED_HOOK} | base64 -d)
    export PLUGIN_EUNOMIA_LOG_HOOK=$(echo ${EUNOMIA_LOG_HOOK} | base64 -d)
    # END
  fi

  log::info "[eunomia::checkout] checkouting $EUNOMIA_GIT_REPOSITORY at branch $EUNOMIA_GIT_BRANCH ..."
  git::checkout $EUNOMIA_GIT_BRANCH $EUNOMIA_GIT_COMMIT $EUNOMIA_GIT_CHECKOUT_DIR $EUNOMIA_GIT_REPOSITORY
  if [ "$?" != "0" ]; then
    log::error "[eunomia::checkout] failed to checkout $EUNOMIA_GIT_REPOSITORY at branch $EUNOMIA_GIT_BRANCH."
    return 1
  fi

  # @TODO add .eunomia to git repository
  log::info "[eunomia::checkout] generating .eunomia at $EUNOMIA_GIT_CHECKOUT_DIR/.eunomia ..."
  cat <<EOF >$EUNOMIA_GIT_CHECKOUT_DIR/.eunomia
# GIT
# BUILD ID
PLUGIN_EUNOMIA_BUILD_ID=${PLUGIN_EUNOMIA_BUILD_ID}
# PIPELINE
PLUGIN_EUNOMIA_BUILD_AUTHOR=${PLUGIN_EUNOMIA_BUILD_AUTHOR}
PLUGIN_EUNOMIA_BUILD_AUTHOR_EMAIL=${PLUGIN_EUNOMIA_BUILD_AUTHOR_EMAIL}
PLUGIN_EUNOMIA_BUILD_AUTHOR_ID=${PLUGIN_EUNOMIA_BUILD_AUTHOR_ID}
PLUGIN_EUNOMIA_BUILD_FROM=${PLUGIN_EUNOMIA_BUILD_FROM}
# Project
PLUGIN_EUNOMIA_PROJECT_ID=$PLUGIN_EUNOMIA_PROJECT_ID
PLUGIN_EUNOMIA_TASK_ID=$PLUGIN_EUNOMIA_TASK_ID
PLUGIN_EUNOMIA_DEPLOYMENT_ID=$PLUGIN_EUNOMIA_DEPLOYMENT_ID
PLUGIN_EUNOMIA_JOB_ID=$PLUGIN_EUNOMIA_JOB_ID
# Hook
PLUGIN_EUNOMIA_START_HOOK=${PLUGIN_EUNOMIA_START_HOOK}
PLUGIN_EUNOMIA_SUCCEED_HOOK=${PLUGIN_EUNOMIA_SUCCEED_HOOK}
PLUGIN_EUNOMIA_FAILED_HOOK=${PLUGIN_EUNOMIA_FAILED_HOOK}
PLUGIN_EUNOMIA_LOG_HOOK=${PLUGIN_EUNOMIA_LOG_HOOK}
EOF

  log::info "[eunomia::checkout] show $EUNOMIA_GIT_CHECKOUT_DIR/.eunomia ..."
  cat $EUNOMIA_GIT_CHECKOUT_DIR/.eunomia

  log::success "[eunomia::checkout] successfully checkout $EUNOMIA_GIT_REPOSITORY at branch $EUNOMIA_GIT_BRANCH."
}

export -f eunomia::checkout
