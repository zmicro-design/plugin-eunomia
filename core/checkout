#!/bin/bash

# eunomia::checkout - Git clone and checkout a branch of a repository
eunomia::checkout() {
  if [ -z "$EUNOMIA_GIT_BRANCH" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_BRANCH is required"
    exit 1
  fi

  if [ -z "$EUNOMIA_GIT_REPOSITORY" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_REPOSITORY is required"
    exit 1
  fi

  if [ -z "$EUNOMIA_GIT_CHECKOUT_DIR" ]; then
    log::error "[eunomia::checkout] env EUNOMIA_GIT_CHECKOUT_DIR is required"
    exit 1
  fi

  log::info "[eunomia::checkout] checkouting $EUNOMIA_GIT_REPOSITORY at branch $EUNOMIA_GIT_BRANCH ..."
  git::checkout branch $EUNOMIA_GIT_BRANCH $EUNOMIA_GIT_REPOSITORY $EUNOMIA_GIT_CHECKOUT_DIR
  if [ "$?" != "0" ]; then
    log::error "[eunomia::checkout] failed to checkout $EUNOMIA_GIT_REPOSITORY at branch $EUNOMIA_GIT_BRANCH."
    return 1
  fi

  # @TODO add .eunomia to git repository
  cat <<EOF >$EUNOMIA_GIT_CHECKOUT_DIR/.eunomia
# GIT
# BUILD ID
PLUGIN_EUNOMIA_BUILD_ID=${PIPELINE_ID}_${BUILD_NUMBER}
# PIPELINE
PLUGIN_EUNOMIA_BUILD_AUTHOR=${eunomia_user_nickname:-$EUNOMIA_BUILD_AUTHOR}
PLUGIN_EUNOMIA_BUILD_AUTHOR_EMAIL=${eunomia_user_email}
PLUGIN_EUNOMIA_BUILD_AUTHOR_ID=${eunomia_user_id}
PLUGIN_EUNOMIA_BUILD_FROM=${EUNOMIA_BUILD_FROM}
# Project
PLUGIN_EUNOMIA_PROJECT_ID=$EUNOMIA_PROJECT_ID
PLUGIN_EUNOMIA_TASK_ID=$EUNOMIA_TASK_ID
PLUGIN_EUNOMIA_DEPLOYMENT_ID=$EUNOMIA_DEPLOYMENT_ID
PLUGIN_EUNOMIA_JOB_ID=$EUNOMIA_JOB_ID
# Hook
PLUGIN_EUNOMIA_START_HOOK=${EUNOMIA_START_HOOK}
PLUGIN_EUNOMIA_SUCCEED_HOOK=${EUNOMIA_SUCCEED_HOOK}
PLUGIN_EUNOMIA_FAILED_HOOK=${EUNOMIA_FAILED_HOOK}
PLUGIN_EUNOMIA_LOG_HOOK=${EUNOMIA_LOG_HOOK}
EOF

  log::success "[eunomia::checkout] successfully checkout $EUNOMIA_GIT_REPOSITORY at branch $EUNOMIA_GIT_BRANCH."
}

export -f eunomia::checkout
